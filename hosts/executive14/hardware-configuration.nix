# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/2265fcde-7f67-42e8-b7bd-66b69c95f104";
      fsType = "ext4";
    };
  fileSystems."/home/ctorgalson/Storage" =
    { device = "/dev/disk/by-uuid/dd92c259-4710-4266-9510-d372129877ad";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-1db85a10-8d39-4aa5-8795-147e62ede6e7".device = "/dev/disk/by-uuid/1db85a10-8d39-4aa5-8795-147e62ede6e7";
  boot.initrd.luks.devices."luks-8844136d-413a-4e9f-9ee6-390b71b42b75".device = "/dev/disk/by-uuid/8844136d-413a-4e9f-9ee6-390b71b42b75";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/54BB-AF21";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/873ddeb4-4cc1-44b8-9674-a36ebe08e50c"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
